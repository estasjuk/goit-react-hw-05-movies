{"version":3,"file":"static/js/355.a70ac008.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","webpack://react-homework-template/./src/components/MovieList/MovieListItem/MovieListItem.module.css?166d","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/MoviesSearch/MoviesSearch.module.css?9702","shared/hooks/useForm.js","webpack://react-homework-template/./src/components/MoviesSearch/Searchbar/Searchbar.module.css?efee","components/MoviesSearch/Searchbar/Searchbar.jsx","webpack://react-homework-template/./src/shared/components/Button/Button/Button.module.css?ea05","shared/components/Button/Button/Button.jsx","components/MoviesSearch/MoviesSearch.jsx","pages/MoviesSearchPage/MoviesSearchPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieList_wrapper__B36Qa\",\"MovieList\":\"MovieList_MovieList__92Iqv\"};","// extracted by mini-css-extract-plugin\nexport default {\"MovieListImage\":\"MovieListItem_MovieListImage__9S96S\",\"MovieListLink\":\"MovieListItem_MovieListLink__Vawhv\",\"MovieListItemTitle\":\"MovieListItem_MovieListItemTitle__uQhAH\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport css from './MovieListItem.module.css';\n\nconst MovieListItem = ({ title, img, id }) => {\n  const location = useLocation();\n  return (\n    <li className={css.MovieListItem}>\n      <Link\n        className={css.MovieListLink}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        <img\n          className={css.MovieListImage}\n          src={\n            img\n              ? `https://image.tmdb.org/t/p/original${img}`\n              : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n          }\n          alt={title}\n          loading=\"lazy\"\n        />\n        <h4>{title}</h4>\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieListItem;\n\nMovieListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  img: PropTypes.string,\n  id: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { memo } from 'react';\n\nimport css from './MovieList.module.css';\nimport MovieListItem from './MovieListItem/MovieListItem';\n\nconst MovieList = ({ movies }) => {\n  const elements = movies.map(({ id, title, poster_path }) => (\n    <MovieListItem key={id} id={id} title={title} img={poster_path} />\n  ));\n\n  return (\n    <div className={css.wrapper}>\n      <ul className={css.MovieList}>{elements}</ul>\n    </div>\n  );\n};\n\nexport default memo(MovieList);\n\nMovieList.defaultProps = {\n  movies: [],\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"App\":\"MoviesSearch_App__Blxcf\"};","import { useState } from 'react';\n\nconst useForm = onSubmit => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = ({ target }) => {\n    setSearch(target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return { search, setSearch, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__CAPuq\",\"SearchForm\":\"Searchbar_SearchForm__rCrnC\",\"SearchFormButton\":\"Searchbar_SearchFormButton__BDAso\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__V9HsJ\",\"SearchFormInput\":\"Searchbar_SearchFormInput__O-hBT\",\"SearchForm-input\":\"Searchbar_SearchForm-input__PsFvs\"};","import PropTypes from 'prop-types';\nimport useForm from 'shared/hooks/useForm';\nimport { memo } from 'react';\n\nimport css from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const { search, handleChange, handleSubmit } = useForm(onSubmit);\n\n  return (\n    <header className={css.Searchbar}>\n      <form className={css.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={css.SearchFormButton}>\n          <span className={css.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={css.SearchFormInput}\n          onChange={handleChange}\n          value={search}\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          required\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default memo(Searchbar);\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__JIlWZ\"};","import PropTypes from 'prop-types';\nimport css from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" onClick={onClick} className={css.Button}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport css from './MoviesSearch.module.css';\nimport Searchbar from './Searchbar/Searchbar';\nimport MovieList from 'components/MovieList/MovieList';\nimport { searchMoviesByTitle } from 'shared/services/movies-api';\nimport Loader from '../../shared/components/Loader/Loader';\nimport Button from 'shared/components/Button/Button/Button';\n\nconst MovieSearch = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoadMore, setIsLoadMore] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n  const page = searchParams.get('page');\n\n  const onSearchMovies = search => {\n    setSearchParams({ search, page: 1 });\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    const checkData = ({ page, total_results, results }) => {\n      const PER_PAGE = 20;\n      if (page === 1 && total_results > PER_PAGE) {\n        setIsLoadMore(true);\n      }\n      if (total_results === 0) {\n        setIsLoadMore(false);\n      } else if (results.length < PER_PAGE) {\n        alert('Oops! This is a finish, try something else');\n        setIsLoadMore(false);\n      }\n    };\n    if (search) {\n      const fetchMovies = async () => {\n        try {\n          setLoading(true);\n          const data = await searchMoviesByTitle(search, page);\n          setMovies(prevMovies => [...prevMovies, ...data.results]);\n          checkData(data);\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchMovies();\n    }\n  }, [search, page]);\n\n  const loadMore = useCallback(() => {\n    setSearchParams({ search, page: Number(page) + 1 });\n  }, [page, search, setSearchParams]);\n\n  return (\n    <div className={css.App}>\n      <Searchbar onSubmit={onSearchMovies} />\n      {movies.length !== 0 && <MovieList movies={movies} />}\n      {loading && <Loader />}\n      {error && <p>Something goes wrong...</p>}\n      {isLoadMore && <Button onClick={loadMore} />}\n    </div>\n  );\n};\n\nexport default MovieSearch;\n","import MoviesSearch from '../../components/MoviesSearch/MoviesSearch';\n\nconst MoviesSearchPage = () => {\n  return (\n    <>\n      <MoviesSearch />\n    </>\n  );\n};\n\nexport default MoviesSearchPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a7a8c3125d3bc96af718eb60f4553f10',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const searchMoviesByTitle = async (query, page = 1) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const searchCastByMovieId = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const searchReviewsByMovieId = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n"],"names":["title","img","id","location","useLocation","className","css","to","state","from","src","alt","loading","MovieList","elements","movies","map","poster_path","memo","defaultProps","onSubmit","useState","search","setSearch","handleChange","target","value","toLowerCase","handleSubmit","e","preventDefault","Searchbar","useForm","type","onChange","name","autoComplete","autoFocus","placeholder","required","onClick","setMovies","setLoading","error","setError","isLoadMore","setIsLoadMore","useSearchParams","searchParams","setSearchParams","get","page","useEffect","checkData","total_results","results","length","alert","fetchMovies","searchMoviesByTitle","data","prevMovies","message","loadMore","useCallback","Number","Loader","MoviesSearch","instance","axios","baseURL","params","api_key","getTrendingMovies","getMovieDetails","movieId","query","searchCastByMovieId","movie_id","searchReviewsByMovieId"],"sourceRoot":""}