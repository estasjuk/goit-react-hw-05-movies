{"version":3,"file":"static/js/472.da689039.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SingleMovie/SingleMovie.module.css?5dab","components/SingleMovie/SingleMovie.jsx","shared/services/getGenresList.js","pages/SingleMoviePage/SingleMoviePage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"SingleMovie_Wrapper__UCPiy\",\"MovieCard\":\"SingleMovie_MovieCard__Tc4T2\",\"title\":\"SingleMovie_title__PKFz3\",\"AddInfo\":\"SingleMovie_AddInfo__+GQop\",\"AddInfoLink\":\"SingleMovie_AddInfoLink__Pg4BD\",\"GoBackBtn\":\"SingleMovie_GoBackBtn__xuXbV\"};","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  Link,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\n\nimport Loader from 'shared/components/Loader/Loader';\nimport { getMovieDetails } from 'shared/services/movies-api';\nimport { getGenresList } from 'shared/services/getGenresList';\n\nimport css from './SingleMovie.module.css';\n\nconst SingleMovie = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch ({ response }) {\n        setError(response.data.message);\n        alert(response.data.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div className={css.Wrapper}>\n      {loading && <Loader />}\n      <button className={css.GoBackBtn} onClick={() => navigate(from)}>\n        Go back\n      </button>\n      <div className={css.MovieCard}>\n        <img\n          src={\n            movie?.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n          }\n          alt={movie.title}\n          width=\"300\"\n          loading=\"lazy\"\n        />\n        <div>\n          <h1 className={css.title}>\n            {movie?.title} ({movie?.release_date})\n          </h1>\n          <h3 className={css.title}>Overview:</h3>\n          <p>{movie?.overview}</p>\n          <h3 className={css.title}>Genres:</h3>\n          {movie?.genres && <p>{getGenresList(movie?.genres)}</p>}\n        </div>\n      </div>\n      <h3 className={css.title}>Additional information:</h3>\n      <div className={css.AddInfo}>\n        <Link className={css.AddInfoLink} to=\"cast\" state={{ from }}>\n          Cast\n        </Link>\n        <Link className={css.AddInfoLink} to=\"reviews\" state={{ from }}>\n          Reviews\n        </Link>\n      </div>\n      <Outlet />\n      {error && <p>Something goes wrong...</p>}\n    </div>\n  );\n};\n\nexport default SingleMovie;\n","export const getGenresList = array => {\n  return array.map(genre => genre.name).join(', ');\n};\n","import SingleMovie from '../../components/SingleMovie/SingleMovie';\n\nconst SingleMoviePage = () => {\n  return <SingleMovie />;\n};\n\nexport default SingleMoviePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a7a8c3125d3bc96af718eb60f4553f10',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const searchMoviesByTitle = async (query, page = 1) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const searchCastByMovieId = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const searchReviewsByMovieId = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n"],"names":["array","useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovieDetails","getMovieDetails","data","response","message","alert","className","css","Loader","onClick","src","poster_path","alt","title","width","release_date","overview","genres","map","genre","name","join","to","instance","axios","baseURL","params","api_key","getTrendingMovies","get","searchMoviesByTitle","query","page","searchCastByMovieId","movie_id","searchReviewsByMovieId"],"sourceRoot":""}